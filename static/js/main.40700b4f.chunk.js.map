{"version":3,"sources":["componentes/Addcategory.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GigGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["Addcategory","setCategories","useState","inputValue","SetInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","gif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GigGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,sBAAMC,SAVK,SAACC,GACZA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBQ,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAG,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTC,EADS,0FACgFC,UAAUH,GAD1F,qBAEII,MAAMF,GAFV,cAETG,EAFS,gBAGQA,EAAKC,OAHb,uBAGPC,EAHO,EAGPA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAR3B,kBAWRM,GAXQ,4CAAH,sDCEHO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,sBAAKc,UAAU,wDAAf,UACI,qBAAKA,UAAU,SAASC,IAAKf,EAAKgB,IAAKN,IACvC,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAU,WAENxB,EAAIC,GACCwB,MAAK,SAACC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAIGqB,EDnByBK,CAAa1B,GAA/ByB,EAFuB,EAE7BlB,KAAYa,EAFiB,EAEjBA,QAEpB,OACI,sBAAKJ,UAAU,iBAAf,UACI,oBAAIA,UAAU,UAAd,SAAyBhB,IACxBoB,GAAW,wCACXK,EAAKhB,KAAI,SAACC,GAAD,OACN,cAAC,EAAD,eAEQA,GADCA,EAAIC,WEVhBgB,EAAe,WAAO,IAAD,EAGMzC,mBAAS,CAAC,gBAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAK9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCbjC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.40700b4f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Addcategory = ({ setCategories }) => {\r\n    const [inputValue, SetInputValue] = useState('')\r\n\r\n    const inputChange = (e) => {\r\n        SetInputValue(e.target.value)\r\n    }\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats])\r\n            SetInputValue('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={submit}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={inputChange} />\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\n\r\nAddcategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n// export default Addcategory\r\n","export const gif = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=9YEXObWZvbzuHlAIyBLP7YKY10FVAJQv&q=${encodeURI(category)}&limit=6`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=' card animate__animated animate__bounce animate__slow'>\r\n            <img className='imgGif' src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GigGrid = ({ category }) => {\r\n\r\n    const { data: imgs, loading } = useFetchGifs(category)\r\n\r\n    return (\r\n        <div className='grid-container'>\r\n            <h3 className='titulos'>{category}</h3>\r\n            {loading && <p>Loading</p>}\r\n            {imgs.map((img) =>\r\n                <GifGridItem\r\n                    key={img.id}\r\n                    {...img} />\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { gif } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        gif(category)\r\n            .then((imgs) => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    return state\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Addcategory } from './componentes/Addcategory';\r\nimport { GigGrid } from './componentes/GigGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['Dragon ball']);\r\n\r\n    return (\r\n        <>\r\n            <h2 >GifExpertApp</h2>\r\n            <Addcategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map((category) =>\r\n                        <GigGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}